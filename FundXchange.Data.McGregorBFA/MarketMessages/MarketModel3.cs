//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: MarketModel3.proto
namespace Fin24.LiveData.Common.Protocol.DataFeed
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ProtocolHeader")]
  public partial class ProtocolHeader : global::ProtoBuf.IExtensible
  {
    public ProtocolHeader() {}
    

    private Fin24.LiveData.Common.Protocol.DataFeed.ProtocolTypeEnum _CommandType = Fin24.LiveData.Common.Protocol.DataFeed.ProtocolTypeEnum.Undefined;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"CommandType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(Fin24.LiveData.Common.Protocol.DataFeed.ProtocolTypeEnum.Undefined)]
    public Fin24.LiveData.Common.Protocol.DataFeed.ProtocolTypeEnum CommandType
    {
      get { return _CommandType; }
      set { _CommandType = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    [global::ProtoBuf.ProtoContract(Name=@"ProtocolTypeEnum")]
    public enum ProtocolTypeEnum
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Undefined", Value=0)]
      Undefined = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"HandshakeMessage", Value=1)]
      HandshakeMessage = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"StringMessage", Value=2)]
      StringMessage = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"AckMessage", Value=3)]
      AckMessage = 3
    }
  
}
