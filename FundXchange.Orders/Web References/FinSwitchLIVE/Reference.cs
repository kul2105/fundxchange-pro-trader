//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FundXchange.Orders.FinSwitchLIVE {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FinSwitchWebServiceSoap", Namespace="http://localhost/FinSwitch/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomDownloadOptions))]
    public partial class FinSwitchWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRPreviewDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRPreviewDownloadAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionRequestDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionRequestDownloadFileAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundAccountFileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundStaticDataDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductStaticDataDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DistributionFileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DistributionFileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRAndCTReconDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadTransferScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTransferDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadTransferDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PDCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FPDCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FCTCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback TERCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback RICustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FTRCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CTCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback IDCustomDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRDownloadStatusAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRDownloadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadASISADailyFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadASISADailyFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FinSwitchWebService() {
            this.Url = global::FundXchange.Orders.Properties.Settings.Default.FundXchange_Orders_FinSwitchLIVE_FinSwitchWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event DownloadFileAsStringCompletedEventHandler DownloadFileAsStringCompleted;
        
        /// <remarks/>
        public event TRPreviewDownloadCompletedEventHandler TRPreviewDownloadCompleted;
        
        /// <remarks/>
        public event TRPreviewDownloadAsStringCompletedEventHandler TRPreviewDownloadAsStringCompleted;
        
        /// <remarks/>
        public event TransactionRequestDownloadCompletedEventHandler TransactionRequestDownloadCompleted;
        
        /// <remarks/>
        public event TransactionRequestDownloadFileAsStringCompletedEventHandler TransactionRequestDownloadFileAsStringCompleted;
        
        /// <remarks/>
        public event FundAccountFileDownloadCompletedEventHandler FundAccountFileDownloadCompleted;
        
        /// <remarks/>
        public event FundStaticDataDownloadCompletedEventHandler FundStaticDataDownloadCompleted;
        
        /// <remarks/>
        public event ProductStaticDataDownloadCompletedEventHandler ProductStaticDataDownloadCompleted;
        
        /// <remarks/>
        public event DistributionFileDownloadCompletedEventHandler DistributionFileDownloadCompleted;
        
        /// <remarks/>
        public event DistributionFileUploadCompletedEventHandler DistributionFileUploadCompleted;
        
        /// <remarks/>
        public event GetProcessStatusCompletedEventHandler GetProcessStatusCompleted;
        
        /// <remarks/>
        public event GetFileDownloadCompletedEventHandler GetFileDownloadCompleted;
        
        /// <remarks/>
        public event TRAndCTReconDownloadCompletedEventHandler TRAndCTReconDownloadCompleted;
        
        /// <remarks/>
        public event DownloadTransferScheduleCompletedEventHandler DownloadTransferScheduleCompleted;
        
        /// <remarks/>
        public event UploadTransferDocumentCompletedEventHandler UploadTransferDocumentCompleted;
        
        /// <remarks/>
        public event DownloadTransferDocumentCompletedEventHandler DownloadTransferDocumentCompleted;
        
        /// <remarks/>
        public event PDCustomDownloadCompletedEventHandler PDCustomDownloadCompleted;
        
        /// <remarks/>
        public event FPDCustomDownloadCompletedEventHandler FPDCustomDownloadCompleted;
        
        /// <remarks/>
        public event FCTCustomDownloadCompletedEventHandler FCTCustomDownloadCompleted;
        
        /// <remarks/>
        public event TERCustomDownloadCompletedEventHandler TERCustomDownloadCompleted;
        
        /// <remarks/>
        public event RICustomDownloadCompletedEventHandler RICustomDownloadCompleted;
        
        /// <remarks/>
        public event FTRCustomDownloadCompletedEventHandler FTRCustomDownloadCompleted;
        
        /// <remarks/>
        public event TRCustomDownloadCompletedEventHandler TRCustomDownloadCompleted;
        
        /// <remarks/>
        public event CTCustomDownloadCompletedEventHandler CTCustomDownloadCompleted;
        
        /// <remarks/>
        public event IDCustomDownloadCompletedEventHandler IDCustomDownloadCompleted;
        
        /// <remarks/>
        public event TRDownloadStatusAsStringCompletedEventHandler TRDownloadStatusAsStringCompleted;
        
        /// <remarks/>
        public event TRDownloadStatusCompletedEventHandler TRDownloadStatusCompleted;
        
        /// <remarks/>
        public event UploadASISADailyFileCompletedEventHandler UploadASISADailyFileCompleted;
        
        /// <remarks/>
        public event DownloadASISADailyFileCompletedEventHandler DownloadASISADailyFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/UploadFile", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadFile(string login, string password, string fileName, string mimeType, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContent, string companyCode) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        login,
                        password,
                        fileName,
                        mimeType,
                        fileContent,
                        companyCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(string login, string password, string fileName, string mimeType, byte[] fileContent, string companyCode) {
            this.UploadFileAsync(login, password, fileName, mimeType, fileContent, companyCode, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(string login, string password, string fileName, string mimeType, byte[] fileContent, string companyCode, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        login,
                        password,
                        fileName,
                        mimeType,
                        fileContent,
                        companyCode}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DownloadFile", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFile(string login, string password, string fileType, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, string category) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        login,
                        password,
                        fileType,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string login, string password, string fileType, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, string category) {
            this.DownloadFileAsync(login, password, fileType, fileDate, onlyDownloadIfFileChanged, companyCode, category, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string login, string password, string fileType, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, string category, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        login,
                        password,
                        fileType,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DownloadFileAsString", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadFileAsString(string login, string password, string fileType, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, string category) {
            object[] results = this.Invoke("DownloadFileAsString", new object[] {
                        login,
                        password,
                        fileType,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsStringAsync(string login, string password, string fileType, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, string category) {
            this.DownloadFileAsStringAsync(login, password, fileType, fileDate, onlyDownloadIfFileChanged, companyCode, category, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsStringAsync(string login, string password, string fileType, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, string category, object userState) {
            if ((this.DownloadFileAsStringOperationCompleted == null)) {
                this.DownloadFileAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileAsStringOperationCompleted);
            }
            this.InvokeAsync("DownloadFileAsString", new object[] {
                        login,
                        password,
                        fileType,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category}, this.DownloadFileAsStringOperationCompleted, userState);
        }
        
        private void OnDownloadFileAsStringOperationCompleted(object arg) {
            if ((this.DownloadFileAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileAsStringCompleted(this, new DownloadFileAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TRPreviewDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] TRPreviewDownload(string login, string password, string companyCode, int processLogID) {
            object[] results = this.Invoke("TRPreviewDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        processLogID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void TRPreviewDownloadAsync(string login, string password, string companyCode, int processLogID) {
            this.TRPreviewDownloadAsync(login, password, companyCode, processLogID, null);
        }
        
        /// <remarks/>
        public void TRPreviewDownloadAsync(string login, string password, string companyCode, int processLogID, object userState) {
            if ((this.TRPreviewDownloadOperationCompleted == null)) {
                this.TRPreviewDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRPreviewDownloadOperationCompleted);
            }
            this.InvokeAsync("TRPreviewDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        processLogID}, this.TRPreviewDownloadOperationCompleted, userState);
        }
        
        private void OnTRPreviewDownloadOperationCompleted(object arg) {
            if ((this.TRPreviewDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRPreviewDownloadCompleted(this, new TRPreviewDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TRPreviewDownloadAsString", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TRPreviewDownloadAsString(string login, string password, string companyCode, int processLogID) {
            object[] results = this.Invoke("TRPreviewDownloadAsString", new object[] {
                        login,
                        password,
                        companyCode,
                        processLogID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TRPreviewDownloadAsStringAsync(string login, string password, string companyCode, int processLogID) {
            this.TRPreviewDownloadAsStringAsync(login, password, companyCode, processLogID, null);
        }
        
        /// <remarks/>
        public void TRPreviewDownloadAsStringAsync(string login, string password, string companyCode, int processLogID, object userState) {
            if ((this.TRPreviewDownloadAsStringOperationCompleted == null)) {
                this.TRPreviewDownloadAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRPreviewDownloadAsStringOperationCompleted);
            }
            this.InvokeAsync("TRPreviewDownloadAsString", new object[] {
                        login,
                        password,
                        companyCode,
                        processLogID}, this.TRPreviewDownloadAsStringOperationCompleted, userState);
        }
        
        private void OnTRPreviewDownloadAsStringOperationCompleted(object arg) {
            if ((this.TRPreviewDownloadAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRPreviewDownloadAsStringCompleted(this, new TRPreviewDownloadAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TransactionRequestDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] TransactionRequestDownload(string login, string password, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, int category) {
            object[] results = this.Invoke("TransactionRequestDownload", new object[] {
                        login,
                        password,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionRequestDownloadAsync(string login, string password, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, int category) {
            this.TransactionRequestDownloadAsync(login, password, fileDate, onlyDownloadIfFileChanged, companyCode, category, null);
        }
        
        /// <remarks/>
        public void TransactionRequestDownloadAsync(string login, string password, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, int category, object userState) {
            if ((this.TransactionRequestDownloadOperationCompleted == null)) {
                this.TransactionRequestDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionRequestDownloadOperationCompleted);
            }
            this.InvokeAsync("TransactionRequestDownload", new object[] {
                        login,
                        password,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category}, this.TransactionRequestDownloadOperationCompleted, userState);
        }
        
        private void OnTransactionRequestDownloadOperationCompleted(object arg) {
            if ((this.TransactionRequestDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionRequestDownloadCompleted(this, new TransactionRequestDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TransactionRequestDownloadFileAsString", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransactionRequestDownloadFileAsString(string login, string password, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, int category) {
            object[] results = this.Invoke("TransactionRequestDownloadFileAsString", new object[] {
                        login,
                        password,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionRequestDownloadFileAsStringAsync(string login, string password, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, int category) {
            this.TransactionRequestDownloadFileAsStringAsync(login, password, fileDate, onlyDownloadIfFileChanged, companyCode, category, null);
        }
        
        /// <remarks/>
        public void TransactionRequestDownloadFileAsStringAsync(string login, string password, System.DateTime fileDate, bool onlyDownloadIfFileChanged, string companyCode, int category, object userState) {
            if ((this.TransactionRequestDownloadFileAsStringOperationCompleted == null)) {
                this.TransactionRequestDownloadFileAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionRequestDownloadFileAsStringOperationCompleted);
            }
            this.InvokeAsync("TransactionRequestDownloadFileAsString", new object[] {
                        login,
                        password,
                        fileDate,
                        onlyDownloadIfFileChanged,
                        companyCode,
                        category}, this.TransactionRequestDownloadFileAsStringOperationCompleted, userState);
        }
        
        private void OnTransactionRequestDownloadFileAsStringOperationCompleted(object arg) {
            if ((this.TransactionRequestDownloadFileAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionRequestDownloadFileAsStringCompleted(this, new TransactionRequestDownloadFileAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/FundAccountFileDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FundAccountFileDownload(string login, string password, string companyCode, string fundCodeFilter, string mancoCodeFilter, string productCodeFilter, string bulkedInvestorCodeFilter, string fundAccountNumberFilter, bool sortDescending) {
            object[] results = this.Invoke("FundAccountFileDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        fundCodeFilter,
                        mancoCodeFilter,
                        productCodeFilter,
                        bulkedInvestorCodeFilter,
                        fundAccountNumberFilter,
                        sortDescending});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FundAccountFileDownloadAsync(string login, string password, string companyCode, string fundCodeFilter, string mancoCodeFilter, string productCodeFilter, string bulkedInvestorCodeFilter, string fundAccountNumberFilter, bool sortDescending) {
            this.FundAccountFileDownloadAsync(login, password, companyCode, fundCodeFilter, mancoCodeFilter, productCodeFilter, bulkedInvestorCodeFilter, fundAccountNumberFilter, sortDescending, null);
        }
        
        /// <remarks/>
        public void FundAccountFileDownloadAsync(string login, string password, string companyCode, string fundCodeFilter, string mancoCodeFilter, string productCodeFilter, string bulkedInvestorCodeFilter, string fundAccountNumberFilter, bool sortDescending, object userState) {
            if ((this.FundAccountFileDownloadOperationCompleted == null)) {
                this.FundAccountFileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundAccountFileDownloadOperationCompleted);
            }
            this.InvokeAsync("FundAccountFileDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        fundCodeFilter,
                        mancoCodeFilter,
                        productCodeFilter,
                        bulkedInvestorCodeFilter,
                        fundAccountNumberFilter,
                        sortDescending}, this.FundAccountFileDownloadOperationCompleted, userState);
        }
        
        private void OnFundAccountFileDownloadOperationCompleted(object arg) {
            if ((this.FundAccountFileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundAccountFileDownloadCompleted(this, new FundAccountFileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/FundStaticDataDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FundStaticDataDownload(string login, string password, string companyCode, System.DateTime fileDate, bool allManCos, string manCoCode, bool allFunds, string[] fundCodes) {
            object[] results = this.Invoke("FundStaticDataDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate,
                        allManCos,
                        manCoCode,
                        allFunds,
                        fundCodes});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FundStaticDataDownloadAsync(string login, string password, string companyCode, System.DateTime fileDate, bool allManCos, string manCoCode, bool allFunds, string[] fundCodes) {
            this.FundStaticDataDownloadAsync(login, password, companyCode, fileDate, allManCos, manCoCode, allFunds, fundCodes, null);
        }
        
        /// <remarks/>
        public void FundStaticDataDownloadAsync(string login, string password, string companyCode, System.DateTime fileDate, bool allManCos, string manCoCode, bool allFunds, string[] fundCodes, object userState) {
            if ((this.FundStaticDataDownloadOperationCompleted == null)) {
                this.FundStaticDataDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundStaticDataDownloadOperationCompleted);
            }
            this.InvokeAsync("FundStaticDataDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate,
                        allManCos,
                        manCoCode,
                        allFunds,
                        fundCodes}, this.FundStaticDataDownloadOperationCompleted, userState);
        }
        
        private void OnFundStaticDataDownloadOperationCompleted(object arg) {
            if ((this.FundStaticDataDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundStaticDataDownloadCompleted(this, new FundStaticDataDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/ProductStaticDataDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ProductStaticDataDownload(string loginID, string password, string companyCode, bool downloadAllBulkedInvestors, string bulkedInvestorCode) {
            object[] results = this.Invoke("ProductStaticDataDownload", new object[] {
                        loginID,
                        password,
                        companyCode,
                        downloadAllBulkedInvestors,
                        bulkedInvestorCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ProductStaticDataDownloadAsync(string loginID, string password, string companyCode, bool downloadAllBulkedInvestors, string bulkedInvestorCode) {
            this.ProductStaticDataDownloadAsync(loginID, password, companyCode, downloadAllBulkedInvestors, bulkedInvestorCode, null);
        }
        
        /// <remarks/>
        public void ProductStaticDataDownloadAsync(string loginID, string password, string companyCode, bool downloadAllBulkedInvestors, string bulkedInvestorCode, object userState) {
            if ((this.ProductStaticDataDownloadOperationCompleted == null)) {
                this.ProductStaticDataDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductStaticDataDownloadOperationCompleted);
            }
            this.InvokeAsync("ProductStaticDataDownload", new object[] {
                        loginID,
                        password,
                        companyCode,
                        downloadAllBulkedInvestors,
                        bulkedInvestorCode}, this.ProductStaticDataDownloadOperationCompleted, userState);
        }
        
        private void OnProductStaticDataDownloadOperationCompleted(object arg) {
            if ((this.ProductStaticDataDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductStaticDataDownloadCompleted(this, new ProductStaticDataDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DistributionFileDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DistributionFileDownload(string login, string password, string companyCode, int distributionDocumentType, int reportingPeriodType, string reportingDate, string distributorAsisaCode, string[] fundAsisaCodes) {
            object[] results = this.Invoke("DistributionFileDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        distributionDocumentType,
                        reportingPeriodType,
                        reportingDate,
                        distributorAsisaCode,
                        fundAsisaCodes});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DistributionFileDownloadAsync(string login, string password, string companyCode, int distributionDocumentType, int reportingPeriodType, string reportingDate, string distributorAsisaCode, string[] fundAsisaCodes) {
            this.DistributionFileDownloadAsync(login, password, companyCode, distributionDocumentType, reportingPeriodType, reportingDate, distributorAsisaCode, fundAsisaCodes, null);
        }
        
        /// <remarks/>
        public void DistributionFileDownloadAsync(string login, string password, string companyCode, int distributionDocumentType, int reportingPeriodType, string reportingDate, string distributorAsisaCode, string[] fundAsisaCodes, object userState) {
            if ((this.DistributionFileDownloadOperationCompleted == null)) {
                this.DistributionFileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDistributionFileDownloadOperationCompleted);
            }
            this.InvokeAsync("DistributionFileDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        distributionDocumentType,
                        reportingPeriodType,
                        reportingDate,
                        distributorAsisaCode,
                        fundAsisaCodes}, this.DistributionFileDownloadOperationCompleted, userState);
        }
        
        private void OnDistributionFileDownloadOperationCompleted(object arg) {
            if ((this.DistributionFileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DistributionFileDownloadCompleted(this, new DistributionFileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DistributionFileUpload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DistributionFileUpload(string login, string password, string companyCode, int distributionFileType, string fundAsisaCode, string yearOfIssue, int quarter, bool isCorrection, string reference, bool isZippedUpload, string fileName, string mimeType, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContent) {
            object[] results = this.Invoke("DistributionFileUpload", new object[] {
                        login,
                        password,
                        companyCode,
                        distributionFileType,
                        fundAsisaCode,
                        yearOfIssue,
                        quarter,
                        isCorrection,
                        reference,
                        isZippedUpload,
                        fileName,
                        mimeType,
                        fileContent});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DistributionFileUploadAsync(string login, string password, string companyCode, int distributionFileType, string fundAsisaCode, string yearOfIssue, int quarter, bool isCorrection, string reference, bool isZippedUpload, string fileName, string mimeType, byte[] fileContent) {
            this.DistributionFileUploadAsync(login, password, companyCode, distributionFileType, fundAsisaCode, yearOfIssue, quarter, isCorrection, reference, isZippedUpload, fileName, mimeType, fileContent, null);
        }
        
        /// <remarks/>
        public void DistributionFileUploadAsync(string login, string password, string companyCode, int distributionFileType, string fundAsisaCode, string yearOfIssue, int quarter, bool isCorrection, string reference, bool isZippedUpload, string fileName, string mimeType, byte[] fileContent, object userState) {
            if ((this.DistributionFileUploadOperationCompleted == null)) {
                this.DistributionFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDistributionFileUploadOperationCompleted);
            }
            this.InvokeAsync("DistributionFileUpload", new object[] {
                        login,
                        password,
                        companyCode,
                        distributionFileType,
                        fundAsisaCode,
                        yearOfIssue,
                        quarter,
                        isCorrection,
                        reference,
                        isZippedUpload,
                        fileName,
                        mimeType,
                        fileContent}, this.DistributionFileUploadOperationCompleted, userState);
        }
        
        private void OnDistributionFileUploadOperationCompleted(object arg) {
            if ((this.DistributionFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DistributionFileUploadCompleted(this, new DistributionFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/GetProcessStatus", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProcessStatus(string login, string password, int processLogID) {
            object[] results = this.Invoke("GetProcessStatus", new object[] {
                        login,
                        password,
                        processLogID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessStatusAsync(string login, string password, int processLogID) {
            this.GetProcessStatusAsync(login, password, processLogID, null);
        }
        
        /// <remarks/>
        public void GetProcessStatusAsync(string login, string password, int processLogID, object userState) {
            if ((this.GetProcessStatusOperationCompleted == null)) {
                this.GetProcessStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessStatusOperationCompleted);
            }
            this.InvokeAsync("GetProcessStatus", new object[] {
                        login,
                        password,
                        processLogID}, this.GetProcessStatusOperationCompleted, userState);
        }
        
        private void OnGetProcessStatusOperationCompleted(object arg) {
            if ((this.GetProcessStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessStatusCompleted(this, new GetProcessStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/GetFileDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileDownload(string login, string password, int processLogID) {
            object[] results = this.Invoke("GetFileDownload", new object[] {
                        login,
                        password,
                        processLogID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDownloadAsync(string login, string password, int processLogID) {
            this.GetFileDownloadAsync(login, password, processLogID, null);
        }
        
        /// <remarks/>
        public void GetFileDownloadAsync(string login, string password, int processLogID, object userState) {
            if ((this.GetFileDownloadOperationCompleted == null)) {
                this.GetFileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDownloadOperationCompleted);
            }
            this.InvokeAsync("GetFileDownload", new object[] {
                        login,
                        password,
                        processLogID}, this.GetFileDownloadOperationCompleted, userState);
        }
        
        private void OnGetFileDownloadOperationCompleted(object arg) {
            if ((this.GetFileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDownloadCompleted(this, new GetFileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TRAndCTReconDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TRAndCTReconDownload(string login, string password, string companyCode, System.DateTime reconDate) {
            object[] results = this.Invoke("TRAndCTReconDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        reconDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TRAndCTReconDownloadAsync(string login, string password, string companyCode, System.DateTime reconDate) {
            this.TRAndCTReconDownloadAsync(login, password, companyCode, reconDate, null);
        }
        
        /// <remarks/>
        public void TRAndCTReconDownloadAsync(string login, string password, string companyCode, System.DateTime reconDate, object userState) {
            if ((this.TRAndCTReconDownloadOperationCompleted == null)) {
                this.TRAndCTReconDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRAndCTReconDownloadOperationCompleted);
            }
            this.InvokeAsync("TRAndCTReconDownload", new object[] {
                        login,
                        password,
                        companyCode,
                        reconDate}, this.TRAndCTReconDownloadOperationCompleted, userState);
        }
        
        private void OnTRAndCTReconDownloadOperationCompleted(object arg) {
            if ((this.TRAndCTReconDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRAndCTReconDownloadCompleted(this, new TRAndCTReconDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DownloadTransferSchedule", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceSchedule DownloadTransferSchedule(TransferScheduleQuery query) {
            object[] results = this.Invoke("DownloadTransferSchedule", new object[] {
                        query});
            return ((WebServiceSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadTransferScheduleAsync(TransferScheduleQuery query) {
            this.DownloadTransferScheduleAsync(query, null);
        }
        
        /// <remarks/>
        public void DownloadTransferScheduleAsync(TransferScheduleQuery query, object userState) {
            if ((this.DownloadTransferScheduleOperationCompleted == null)) {
                this.DownloadTransferScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadTransferScheduleOperationCompleted);
            }
            this.InvokeAsync("DownloadTransferSchedule", new object[] {
                        query}, this.DownloadTransferScheduleOperationCompleted, userState);
        }
        
        private void OnDownloadTransferScheduleOperationCompleted(object arg) {
            if ((this.DownloadTransferScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadTransferScheduleCompleted(this, new DownloadTransferScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/UploadTransferDocument", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadTransferDocument(UploadDocumentCommand upload) {
            this.Invoke("UploadTransferDocument", new object[] {
                        upload});
        }
        
        /// <remarks/>
        public void UploadTransferDocumentAsync(UploadDocumentCommand upload) {
            this.UploadTransferDocumentAsync(upload, null);
        }
        
        /// <remarks/>
        public void UploadTransferDocumentAsync(UploadDocumentCommand upload, object userState) {
            if ((this.UploadTransferDocumentOperationCompleted == null)) {
                this.UploadTransferDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTransferDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadTransferDocument", new object[] {
                        upload}, this.UploadTransferDocumentOperationCompleted, userState);
        }
        
        private void OnUploadTransferDocumentOperationCompleted(object arg) {
            if ((this.UploadTransferDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTransferDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DownloadTransferDocument", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebServiceDocument DownloadTransferDocument(DownloadTransferDocumentQuery query) {
            object[] results = this.Invoke("DownloadTransferDocument", new object[] {
                        query});
            return ((WebServiceDocument)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadTransferDocumentAsync(DownloadTransferDocumentQuery query) {
            this.DownloadTransferDocumentAsync(query, null);
        }
        
        /// <remarks/>
        public void DownloadTransferDocumentAsync(DownloadTransferDocumentQuery query, object userState) {
            if ((this.DownloadTransferDocumentOperationCompleted == null)) {
                this.DownloadTransferDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadTransferDocumentOperationCompleted);
            }
            this.InvokeAsync("DownloadTransferDocument", new object[] {
                        query}, this.DownloadTransferDocumentOperationCompleted, userState);
        }
        
        private void OnDownloadTransferDocumentOperationCompleted(object arg) {
            if ((this.DownloadTransferDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadTransferDocumentCompleted(this, new DownloadTransferDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/PDCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult PDCustomDownload(PDDownloadOptions query) {
            object[] results = this.Invoke("PDCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void PDCustomDownloadAsync(PDDownloadOptions query) {
            this.PDCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void PDCustomDownloadAsync(PDDownloadOptions query, object userState) {
            if ((this.PDCustomDownloadOperationCompleted == null)) {
                this.PDCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPDCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("PDCustomDownload", new object[] {
                        query}, this.PDCustomDownloadOperationCompleted, userState);
        }
        
        private void OnPDCustomDownloadOperationCompleted(object arg) {
            if ((this.PDCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PDCustomDownloadCompleted(this, new PDCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/FPDCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult FPDCustomDownload(FPDDownloadOptions query) {
            object[] results = this.Invoke("FPDCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void FPDCustomDownloadAsync(FPDDownloadOptions query) {
            this.FPDCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void FPDCustomDownloadAsync(FPDDownloadOptions query, object userState) {
            if ((this.FPDCustomDownloadOperationCompleted == null)) {
                this.FPDCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFPDCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("FPDCustomDownload", new object[] {
                        query}, this.FPDCustomDownloadOperationCompleted, userState);
        }
        
        private void OnFPDCustomDownloadOperationCompleted(object arg) {
            if ((this.FPDCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FPDCustomDownloadCompleted(this, new FPDCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/FCTCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult FCTCustomDownload(FCTDownloadOptions query) {
            object[] results = this.Invoke("FCTCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void FCTCustomDownloadAsync(FCTDownloadOptions query) {
            this.FCTCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void FCTCustomDownloadAsync(FCTDownloadOptions query, object userState) {
            if ((this.FCTCustomDownloadOperationCompleted == null)) {
                this.FCTCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFCTCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("FCTCustomDownload", new object[] {
                        query}, this.FCTCustomDownloadOperationCompleted, userState);
        }
        
        private void OnFCTCustomDownloadOperationCompleted(object arg) {
            if ((this.FCTCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FCTCustomDownloadCompleted(this, new FCTCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TERCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult TERCustomDownload(TERCustomDownloadOptions query) {
            object[] results = this.Invoke("TERCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void TERCustomDownloadAsync(TERCustomDownloadOptions query) {
            this.TERCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void TERCustomDownloadAsync(TERCustomDownloadOptions query, object userState) {
            if ((this.TERCustomDownloadOperationCompleted == null)) {
                this.TERCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTERCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("TERCustomDownload", new object[] {
                        query}, this.TERCustomDownloadOperationCompleted, userState);
        }
        
        private void OnTERCustomDownloadOperationCompleted(object arg) {
            if ((this.TERCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TERCustomDownloadCompleted(this, new TERCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/RICustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult RICustomDownload(RICustomDownloadOptions query) {
            object[] results = this.Invoke("RICustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void RICustomDownloadAsync(RICustomDownloadOptions query) {
            this.RICustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void RICustomDownloadAsync(RICustomDownloadOptions query, object userState) {
            if ((this.RICustomDownloadOperationCompleted == null)) {
                this.RICustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRICustomDownloadOperationCompleted);
            }
            this.InvokeAsync("RICustomDownload", new object[] {
                        query}, this.RICustomDownloadOperationCompleted, userState);
        }
        
        private void OnRICustomDownloadOperationCompleted(object arg) {
            if ((this.RICustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RICustomDownloadCompleted(this, new RICustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/FTRCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult FTRCustomDownload(FTRCustomDownloadOptions query) {
            object[] results = this.Invoke("FTRCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void FTRCustomDownloadAsync(FTRCustomDownloadOptions query) {
            this.FTRCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void FTRCustomDownloadAsync(FTRCustomDownloadOptions query, object userState) {
            if ((this.FTRCustomDownloadOperationCompleted == null)) {
                this.FTRCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFTRCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("FTRCustomDownload", new object[] {
                        query}, this.FTRCustomDownloadOperationCompleted, userState);
        }
        
        private void OnFTRCustomDownloadOperationCompleted(object arg) {
            if ((this.FTRCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FTRCustomDownloadCompleted(this, new FTRCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TRCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult TRCustomDownload(TRCustomDownloadOptions query) {
            object[] results = this.Invoke("TRCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void TRCustomDownloadAsync(TRCustomDownloadOptions query) {
            this.TRCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void TRCustomDownloadAsync(TRCustomDownloadOptions query, object userState) {
            if ((this.TRCustomDownloadOperationCompleted == null)) {
                this.TRCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("TRCustomDownload", new object[] {
                        query}, this.TRCustomDownloadOperationCompleted, userState);
        }
        
        private void OnTRCustomDownloadOperationCompleted(object arg) {
            if ((this.TRCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRCustomDownloadCompleted(this, new TRCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/CTCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult CTCustomDownload(CTCustomDownloadOptions query) {
            object[] results = this.Invoke("CTCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void CTCustomDownloadAsync(CTCustomDownloadOptions query) {
            this.CTCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void CTCustomDownloadAsync(CTCustomDownloadOptions query, object userState) {
            if ((this.CTCustomDownloadOperationCompleted == null)) {
                this.CTCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCTCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("CTCustomDownload", new object[] {
                        query}, this.CTCustomDownloadOperationCompleted, userState);
        }
        
        private void OnCTCustomDownloadOperationCompleted(object arg) {
            if ((this.CTCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CTCustomDownloadCompleted(this, new CTCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/IDCustomDownload", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomDownloadResult IDCustomDownload(IDCustomDownloadOptions query) {
            object[] results = this.Invoke("IDCustomDownload", new object[] {
                        query});
            return ((CustomDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void IDCustomDownloadAsync(IDCustomDownloadOptions query) {
            this.IDCustomDownloadAsync(query, null);
        }
        
        /// <remarks/>
        public void IDCustomDownloadAsync(IDCustomDownloadOptions query, object userState) {
            if ((this.IDCustomDownloadOperationCompleted == null)) {
                this.IDCustomDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDCustomDownloadOperationCompleted);
            }
            this.InvokeAsync("IDCustomDownload", new object[] {
                        query}, this.IDCustomDownloadOperationCompleted, userState);
        }
        
        private void OnIDCustomDownloadOperationCompleted(object arg) {
            if ((this.IDCustomDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDCustomDownloadCompleted(this, new IDCustomDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TRDownloadStatusAsString", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TRDownloadStatusAsString(string login, string password, string companyCode, System.DateTime fileDate) {
            object[] results = this.Invoke("TRDownloadStatusAsString", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TRDownloadStatusAsStringAsync(string login, string password, string companyCode, System.DateTime fileDate) {
            this.TRDownloadStatusAsStringAsync(login, password, companyCode, fileDate, null);
        }
        
        /// <remarks/>
        public void TRDownloadStatusAsStringAsync(string login, string password, string companyCode, System.DateTime fileDate, object userState) {
            if ((this.TRDownloadStatusAsStringOperationCompleted == null)) {
                this.TRDownloadStatusAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRDownloadStatusAsStringOperationCompleted);
            }
            this.InvokeAsync("TRDownloadStatusAsString", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate}, this.TRDownloadStatusAsStringOperationCompleted, userState);
        }
        
        private void OnTRDownloadStatusAsStringOperationCompleted(object arg) {
            if ((this.TRDownloadStatusAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRDownloadStatusAsStringCompleted(this, new TRDownloadStatusAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/TRDownloadStatus", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] TRDownloadStatus(string login, string password, string companyCode, System.DateTime fileDate) {
            object[] results = this.Invoke("TRDownloadStatus", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void TRDownloadStatusAsync(string login, string password, string companyCode, System.DateTime fileDate) {
            this.TRDownloadStatusAsync(login, password, companyCode, fileDate, null);
        }
        
        /// <remarks/>
        public void TRDownloadStatusAsync(string login, string password, string companyCode, System.DateTime fileDate, object userState) {
            if ((this.TRDownloadStatusOperationCompleted == null)) {
                this.TRDownloadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRDownloadStatusOperationCompleted);
            }
            this.InvokeAsync("TRDownloadStatus", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate}, this.TRDownloadStatusOperationCompleted, userState);
        }
        
        private void OnTRDownloadStatusOperationCompleted(object arg) {
            if ((this.TRDownloadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRDownloadStatusCompleted(this, new TRDownloadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/UploadASISADailyFile", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadASISADailyFile(string login, string password, string companyCode, string receivingCompanyCode, System.DateTime fileDate, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContent) {
            this.Invoke("UploadASISADailyFile", new object[] {
                        login,
                        password,
                        companyCode,
                        receivingCompanyCode,
                        fileDate,
                        fileContent});
        }
        
        /// <remarks/>
        public void UploadASISADailyFileAsync(string login, string password, string companyCode, string receivingCompanyCode, System.DateTime fileDate, byte[] fileContent) {
            this.UploadASISADailyFileAsync(login, password, companyCode, receivingCompanyCode, fileDate, fileContent, null);
        }
        
        /// <remarks/>
        public void UploadASISADailyFileAsync(string login, string password, string companyCode, string receivingCompanyCode, System.DateTime fileDate, byte[] fileContent, object userState) {
            if ((this.UploadASISADailyFileOperationCompleted == null)) {
                this.UploadASISADailyFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadASISADailyFileOperationCompleted);
            }
            this.InvokeAsync("UploadASISADailyFile", new object[] {
                        login,
                        password,
                        companyCode,
                        receivingCompanyCode,
                        fileDate,
                        fileContent}, this.UploadASISADailyFileOperationCompleted, userState);
        }
        
        private void OnUploadASISADailyFileOperationCompleted(object arg) {
            if ((this.UploadASISADailyFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadASISADailyFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/FinSwitch/DownloadASISADailyFile", RequestNamespace="http://localhost/FinSwitch/", ResponseNamespace="http://localhost/FinSwitch/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadASISADailyFile(string login, string password, string companyCode, System.DateTime fileDate, int dateType, bool onlyDownloadIfFileChanged) {
            object[] results = this.Invoke("DownloadASISADailyFile", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate,
                        dateType,
                        onlyDownloadIfFileChanged});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadASISADailyFileAsync(string login, string password, string companyCode, System.DateTime fileDate, int dateType, bool onlyDownloadIfFileChanged) {
            this.DownloadASISADailyFileAsync(login, password, companyCode, fileDate, dateType, onlyDownloadIfFileChanged, null);
        }
        
        /// <remarks/>
        public void DownloadASISADailyFileAsync(string login, string password, string companyCode, System.DateTime fileDate, int dateType, bool onlyDownloadIfFileChanged, object userState) {
            if ((this.DownloadASISADailyFileOperationCompleted == null)) {
                this.DownloadASISADailyFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadASISADailyFileOperationCompleted);
            }
            this.InvokeAsync("DownloadASISADailyFile", new object[] {
                        login,
                        password,
                        companyCode,
                        fileDate,
                        dateType,
                        onlyDownloadIfFileChanged}, this.DownloadASISADailyFileOperationCompleted, userState);
        }
        
        private void OnDownloadASISADailyFileOperationCompleted(object arg) {
            if ((this.DownloadASISADailyFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadASISADailyFileCompleted(this, new DownloadASISADailyFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class TransferScheduleQuery {
        
        private string loginField;
        
        private string passwordField;
        
        private string companyCodeField;
        
        private System.DateTime fileDateField;
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyCode {
            get {
                return this.companyCodeField;
            }
            set {
                this.companyCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FileDate {
            get {
                return this.fileDateField;
            }
            set {
                this.fileDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class CustomDownloadResult {
        
        private int processLogIDField;
        
        /// <remarks/>
        public int ProcessLogID {
            get {
                return this.processLogIDField;
            }
            set {
                this.processLogIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IDCustomDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CTCustomDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TRCustomDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTRCustomDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RICustomDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TERCustomDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCTDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FPDDownloadOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDDownloadOptions))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class CustomDownloadOptions {
        
        private string loginField;
        
        private string passwordField;
        
        private string companyCodeField;
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyCode {
            get {
                return this.companyCodeField;
            }
            set {
                this.companyCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class IDCustomDownloadOptions : CustomDownloadOptions {
        
        private IncomeDistributionFileOption statusFilterField;
        
        private bool excludeZeroDistributionsField;
        
        private FileVersion fileVersionField;
        
        private DateSwitch dateKindField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] mancoCodesField;
        
        /// <remarks/>
        public IncomeDistributionFileOption StatusFilter {
            get {
                return this.statusFilterField;
            }
            set {
                this.statusFilterField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeZeroDistributions {
            get {
                return this.excludeZeroDistributionsField;
            }
            set {
                this.excludeZeroDistributionsField = value;
            }
        }
        
        /// <remarks/>
        public FileVersion FileVersion {
            get {
                return this.fileVersionField;
            }
            set {
                this.fileVersionField = value;
            }
        }
        
        /// <remarks/>
        public DateSwitch DateKind {
            get {
                return this.dateKindField;
            }
            set {
                this.dateKindField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] MancoCodes {
            get {
                return this.mancoCodesField;
            }
            set {
                this.mancoCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum IncomeDistributionFileOption {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        AllExcludeOriginalIfCorrectionExists,
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        Corrected,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum FileVersion {
        
        /// <remarks/>
        Standard,
        
        /// <remarks/>
        DWTVersion60,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum DateSwitch {
        
        /// <remarks/>
        CycleDate,
        
        /// <remarks/>
        ValueDate,
        
        /// <remarks/>
        SubmissionDate,
        
        /// <remarks/>
        DeclarationDate,
        
        /// <remarks/>
        UploadDate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class CTCustomDownloadOptions : CustomDownloadOptions {
        
        private CTDownloadStatusOption statusFilterField;
        
        private string[] transactionTypeCodesField;
        
        private DateSwitch dateKindField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] mancoCodesField;
        
        private string[] productCodesField;
        
        /// <remarks/>
        public CTDownloadStatusOption StatusFilter {
            get {
                return this.statusFilterField;
            }
            set {
                this.statusFilterField = value;
            }
        }
        
        /// <remarks/>
        public string[] TransactionTypeCodes {
            get {
                return this.transactionTypeCodesField;
            }
            set {
                this.transactionTypeCodesField = value;
            }
        }
        
        /// <remarks/>
        public DateSwitch DateKind {
            get {
                return this.dateKindField;
            }
            set {
                this.dateKindField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] MancoCodes {
            get {
                return this.mancoCodesField;
            }
            set {
                this.mancoCodesField = value;
            }
        }
        
        /// <remarks/>
        public string[] ProductCodes {
            get {
                return this.productCodesField;
            }
            set {
                this.productCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum CTDownloadStatusOption {
        
        /// <remarks/>
        AllStatus,
        
        /// <remarks/>
        AllStatusExcludeIfCorrected,
        
        /// <remarks/>
        AllStatusExcludeIfRejected,
        
        /// <remarks/>
        AllStatusExcludeIfCorrectedAndIfRejected,
        
        /// <remarks/>
        OriginalOnly,
        
        /// <remarks/>
        CorrectedOnly,
        
        /// <remarks/>
        RejectedOnly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class TRCustomDownloadOptions : CustomDownloadOptions {
        
        private FundTypeCategoryID fundTypeField;
        
        private string[] transactionTypeCodesField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] bulkedInvestorCodesField;
        
        /// <remarks/>
        public FundTypeCategoryID FundType {
            get {
                return this.fundTypeField;
            }
            set {
                this.fundTypeField = value;
            }
        }
        
        /// <remarks/>
        public string[] TransactionTypeCodes {
            get {
                return this.transactionTypeCodesField;
            }
            set {
                this.transactionTypeCodesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] BulkedInvestorCodes {
            get {
                return this.bulkedInvestorCodesField;
            }
            set {
                this.bulkedInvestorCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum FundTypeCategoryID {
        
        /// <remarks/>
        AllTransactionRequests,
        
        /// <remarks/>
        MoneyMarketTransactionRequestsOnly,
        
        /// <remarks/>
        TransactionRequestsExcludingMoneyMarket,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class FTRCustomDownloadOptions : CustomDownloadOptions {
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] bulkedInvestorCodesField;
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] BulkedInvestorCodes {
            get {
                return this.bulkedInvestorCodesField;
            }
            set {
                this.bulkedInvestorCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class RICustomDownloadOptions : CustomDownloadOptions {
        
        private RetailInstitutionalSplitFileOption statusOptionField;
        
        private System.DateTime declarationDateField;
        
        private string[] bulkedInvestorCodesField;
        
        /// <remarks/>
        public RetailInstitutionalSplitFileOption StatusOption {
            get {
                return this.statusOptionField;
            }
            set {
                this.statusOptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DeclarationDate {
            get {
                return this.declarationDateField;
            }
            set {
                this.declarationDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] BulkedInvestorCodes {
            get {
                return this.bulkedInvestorCodesField;
            }
            set {
                this.bulkedInvestorCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum RetailInstitutionalSplitFileOption {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        AllExcludeOriginalIfCorrectionExists,
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        Corrected,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class TERCustomDownloadOptions : CustomDownloadOptions {
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] mancoCodesField;
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] MancoCodes {
            get {
                return this.mancoCodesField;
            }
            set {
                this.mancoCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class FCTDownloadOptions : CustomDownloadOptions {
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private DateSwitch dateKindField;
        
        private CTDownloadStatusOption statusOptionField;
        
        private string[] mancoCodesField;
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public DateSwitch DateKind {
            get {
                return this.dateKindField;
            }
            set {
                this.dateKindField = value;
            }
        }
        
        /// <remarks/>
        public CTDownloadStatusOption StatusOption {
            get {
                return this.statusOptionField;
            }
            set {
                this.statusOptionField = value;
            }
        }
        
        /// <remarks/>
        public string[] MancoCodes {
            get {
                return this.mancoCodesField;
            }
            set {
                this.mancoCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class FPDDownloadOptions : CustomDownloadOptions {
        
        private PriceDistributionDownloadStatusOption statusOptionField;
        
        private DateSwitch dateKindField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] mancoCodesField;
        
        /// <remarks/>
        public PriceDistributionDownloadStatusOption StatusOption {
            get {
                return this.statusOptionField;
            }
            set {
                this.statusOptionField = value;
            }
        }
        
        /// <remarks/>
        public DateSwitch DateKind {
            get {
                return this.dateKindField;
            }
            set {
                this.dateKindField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] MancoCodes {
            get {
                return this.mancoCodesField;
            }
            set {
                this.mancoCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum PriceDistributionDownloadStatusOption {
        
        /// <remarks/>
        AllStatus,
        
        /// <remarks/>
        AllStatusExcludeIfCorrected,
        
        /// <remarks/>
        OriginalOnly,
        
        /// <remarks/>
        CorrectedOnly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class PDDownloadOptions : CustomDownloadOptions {
        
        private PriceDistributionDownloadStatusOption statusOptionField;
        
        private string[] priceTypesField;
        
        private bool includeISINNumberField;
        
        private string[] fundTypesField;
        
        private DateSwitch dateKindField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private string[] mancoCodesField;
        
        private string[] fundsField;
        
        /// <remarks/>
        public PriceDistributionDownloadStatusOption StatusOption {
            get {
                return this.statusOptionField;
            }
            set {
                this.statusOptionField = value;
            }
        }
        
        /// <remarks/>
        public string[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
            }
        }
        
        /// <remarks/>
        public bool IncludeISINNumber {
            get {
                return this.includeISINNumberField;
            }
            set {
                this.includeISINNumberField = value;
            }
        }
        
        /// <remarks/>
        public string[] FundTypes {
            get {
                return this.fundTypesField;
            }
            set {
                this.fundTypesField = value;
            }
        }
        
        /// <remarks/>
        public DateSwitch DateKind {
            get {
                return this.dateKindField;
            }
            set {
                this.dateKindField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] MancoCodes {
            get {
                return this.mancoCodesField;
            }
            set {
                this.mancoCodesField = value;
            }
        }
        
        /// <remarks/>
        public string[] Funds {
            get {
                return this.fundsField;
            }
            set {
                this.fundsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class WebServiceDocument {
        
        private byte[] contentField;
        
        private string fileNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class DownloadTransferDocumentQuery {
        
        private string loginField;
        
        private string passwordField;
        
        private string transferNumberField;
        
        private TransferDocumentationTypeID transferDocumentationTypeIDField;
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string TransferNumber {
            get {
                return this.transferNumberField;
            }
            set {
                this.transferNumberField = value;
            }
        }
        
        /// <remarks/>
        public TransferDocumentationTypeID TransferDocumentationTypeID {
            get {
                return this.transferDocumentationTypeIDField;
            }
            set {
                this.transferDocumentationTypeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum TransferDocumentationTypeID {
        
        /// <remarks/>
        VolInitialRequirements,
        
        /// <remarks/>
        VolProofOfTransfer,
        
        /// <remarks/>
        S148InitialRequirements,
        
        /// <remarks/>
        TransferorHForm,
        
        /// <remarks/>
        TransfereeHForm,
        
        /// <remarks/>
        TransferorJForm,
        
        /// <remarks/>
        TransfereeJForm,
        
        /// <remarks/>
        S141InitialRequirements,
        
        /// <remarks/>
        AForm,
        
        /// <remarks/>
        FSBApprovalLetter,
        
        /// <remarks/>
        TransferorROT,
        
        /// <remarks/>
        TransfereeROT,
        
        /// <remarks/>
        S37InitialRequirements,
        
        /// <remarks/>
        Annexure2Out,
        
        /// <remarks/>
        Annexure2OutAndIn,
        
        /// <remarks/>
        S37ProofOfTransfer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class UploadDocumentCommand {
        
        private string transferNumberField;
        
        private TransferDocumentationTypeID transferDocumentationTypeIDField;
        
        private TransferTypeID transferTypeField;
        
        private string fileNameField;
        
        private byte[] fileContentsField;
        
        private string descriptionField;
        
        private string loginField;
        
        private string passwordField;
        
        private string companyCodeField;
        
        /// <remarks/>
        public string TransferNumber {
            get {
                return this.transferNumberField;
            }
            set {
                this.transferNumberField = value;
            }
        }
        
        /// <remarks/>
        public TransferDocumentationTypeID TransferDocumentationTypeID {
            get {
                return this.transferDocumentationTypeIDField;
            }
            set {
                this.transferDocumentationTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public TransferTypeID TransferType {
            get {
                return this.transferTypeField;
            }
            set {
                this.transferTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileContents {
            get {
                return this.fileContentsField;
            }
            set {
                this.fileContentsField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyCode {
            get {
                return this.companyCodeField;
            }
            set {
                this.companyCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public enum TransferTypeID {
        
        /// <remarks/>
        Voluntary,
        
        /// <remarks/>
        FourteenEight,
        
        /// <remarks/>
        FourteenOne,
        
        /// <remarks/>
        ThirtySeven,
        
        /// <remarks/>
        Unrestricted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/FinSwitch/")]
    public partial class WebServiceSchedule {
        
        private string contentField;
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DownloadFileAsStringCompletedEventHandler(object sender, DownloadFileAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TRPreviewDownloadCompletedEventHandler(object sender, TRPreviewDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRPreviewDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRPreviewDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TRPreviewDownloadAsStringCompletedEventHandler(object sender, TRPreviewDownloadAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRPreviewDownloadAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRPreviewDownloadAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TransactionRequestDownloadCompletedEventHandler(object sender, TransactionRequestDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionRequestDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionRequestDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TransactionRequestDownloadFileAsStringCompletedEventHandler(object sender, TransactionRequestDownloadFileAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionRequestDownloadFileAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionRequestDownloadFileAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FundAccountFileDownloadCompletedEventHandler(object sender, FundAccountFileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundAccountFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundAccountFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FundStaticDataDownloadCompletedEventHandler(object sender, FundStaticDataDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundStaticDataDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundStaticDataDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ProductStaticDataDownloadCompletedEventHandler(object sender, ProductStaticDataDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductStaticDataDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductStaticDataDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DistributionFileDownloadCompletedEventHandler(object sender, DistributionFileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistributionFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DistributionFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DistributionFileUploadCompletedEventHandler(object sender, DistributionFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistributionFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DistributionFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetProcessStatusCompletedEventHandler(object sender, GetProcessStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetFileDownloadCompletedEventHandler(object sender, GetFileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TRAndCTReconDownloadCompletedEventHandler(object sender, TRAndCTReconDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRAndCTReconDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRAndCTReconDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DownloadTransferScheduleCompletedEventHandler(object sender, DownloadTransferScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadTransferScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadTransferScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UploadTransferDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DownloadTransferDocumentCompletedEventHandler(object sender, DownloadTransferDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadTransferDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadTransferDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void PDCustomDownloadCompletedEventHandler(object sender, PDCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PDCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PDCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FPDCustomDownloadCompletedEventHandler(object sender, FPDCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FPDCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FPDCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FCTCustomDownloadCompletedEventHandler(object sender, FCTCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FCTCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FCTCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TERCustomDownloadCompletedEventHandler(object sender, TERCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TERCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TERCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RICustomDownloadCompletedEventHandler(object sender, RICustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RICustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RICustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FTRCustomDownloadCompletedEventHandler(object sender, FTRCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FTRCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FTRCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TRCustomDownloadCompletedEventHandler(object sender, TRCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CTCustomDownloadCompletedEventHandler(object sender, CTCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CTCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CTCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void IDCustomDownloadCompletedEventHandler(object sender, IDCustomDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDCustomDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IDCustomDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TRDownloadStatusAsStringCompletedEventHandler(object sender, TRDownloadStatusAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRDownloadStatusAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRDownloadStatusAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TRDownloadStatusCompletedEventHandler(object sender, TRDownloadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRDownloadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRDownloadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UploadASISADailyFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DownloadASISADailyFileCompletedEventHandler(object sender, DownloadASISADailyFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadASISADailyFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadASISADailyFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591